{"version":3,"file":"static/js/697.733ac2ca.chunk.js","mappings":"sRAEO,SAASA,IAMZ,OAAOC,EAAAA,EAAAA,IAAA,UALK,kDAKL,oBAHE,mCAGF,WACV,CAEM,SAASC,EAAWC,GACvB,IAAMC,EAAG,6CAAyCD,GAMlD,OAAOF,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAJE,oCAKZ,CAEM,SAASC,EAAeC,GAC3B,IACMC,EAAa,CACfC,IAAK,mCACLC,SAAUH,GAENE,EAAkBD,EAAlBC,IAAKC,EAAaF,EAAbE,SAEb,OAAOR,EAAAA,EAAAA,IAAA,UAPK,4CAOL,oBAA4BO,EAA5B,kBAAyCC,EAAzC,WACV,CAEM,SAASC,EAAeP,GAC3B,IAAMC,EAAG,6CAAyCD,EAAzC,YAMT,OAAOF,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAJE,oCAKZ,CAEM,SAASO,EAAgBR,GAC5B,IAAMC,EAAG,6CAAyCD,EAAzC,YAMT,OAAOF,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAJE,oCAKZ,C,8CC5CD,IAJe,kBACX,0BAAK,SAAC,KAAD,KADM,C,2KCAFQ,E,QAAQC,GAAAA,EAAH,kE,SCoDlB,EA9CgB,WACd,IAAQV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAAsCY,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAmCF,EAAAA,EAAAA,WAAS,GAA5C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAyBA,OAvBAC,EAAAA,EAAAA,IAAS,WAAM,wCACb,8GAEgCX,EAAAA,EAAAA,IAAgBR,GAFhD,UAG+C,KADrCoB,EAFV,QAGuBC,KAAKC,QAAQC,OAHpC,uBAIMT,EAAeM,EAAcC,KAAKC,SAClCN,GAAc,GALpB,gCAQIA,GAAc,GACdF,EAAe,IACT,IAAIU,MAAM,4CAVpB,kCAYIR,GAAc,GACdE,EAAS,EAAD,IACRJ,EAAe,IACfW,QAAQC,IAAR,MAfJ,2DADa,sBAoBbV,GAAc,GApBA,WAAD,wBAqBbW,EACD,KAEC,+BACGZ,IAAa,SAACa,EAAA,EAAD,IACbX,IAAS,wBAAKA,EAAMY,UACG,IAAvBhB,EAAYU,SAAgB,wBACpBV,EAAYiB,KAAI,SAACC,GAAD,OACf,2BACE,UAACtB,EAAD,qBAAesB,EAAOC,WACtB,uBAAID,EAAOE,YAFJF,EAAOG,GADD,QAU9B,C","sources":["Api/getAxios.js","components/Loader.jsx","components/Reviews.styled.jsx","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport function getAxiosList() {\n    const url = \"https://api.themoviedb.org/3/trending/movie/day\";\n    const parameters = {\n        key: '866c6d075a3e37e8cd8cfb5e85076bc4',\n    }\n    const { key } = parameters;\n    return axios.get(`${url}?api_key=${key}&page=1`)\n};\n\nexport function getAxiosID(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n    const parameters = {\n        key: '866c6d075a3e37e8cd8cfb5e85076bc4',\n    }\n    const { key } = parameters;\n    \n    return axios.get(`${url}?api_key=${key}`)\n};\n\nexport function getSearchFilms(searchFilms) {\n    const url = \"https://api.themoviedb.org/3/search/movie\";\n    const parameters = {\n        key: '866c6d075a3e37e8cd8cfb5e85076bc4',\n        nameFilm: searchFilms,\n    }\n    const { key, nameFilm } = parameters;\n    \n    return axios.get(`${url}?api_key=${key}&query=${nameFilm}&page=1`)\n};\n\nexport function getAxiosActors(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n    const parameters = {\n        key: '866c6d075a3e37e8cd8cfb5e85076bc4',\n    }\n    const { key } = parameters;\n    \n    return axios.get(`${url}?api_key=${key}`)\n};\n\nexport function getAxiosReviews(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n    const parameters = {\n        key: '866c6d075a3e37e8cd8cfb5e85076bc4',\n    }\n    const { key } = parameters;\n    \n    return axios.get(`${url}?api_key=${key}`)\n};","import { ThreeDots } from 'react-loader-spinner'\n\nconst Loader = () => (\n    <div><ThreeDots /></div>\n)\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const Avtor = styled.p `\n    color: black;\n    font-weight: 700;\n`\n","import { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useMount } from 'react-use';\n\nimport { getAxiosReviews } from \"../Api/getAxios\";\nimport Loader from './Loader'\nimport { Avtor } from './Reviews.styled'\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [filmReviews, setFilmReviews] = useState([]);\n  const [isLoading, setIsLoadings] = useState(false);\n  const [error, setError] = useState('');\n\n  useMount(() => {\n    async function getFilm() {\n      try {\n        const searchReviews = await getAxiosReviews(movieId)\n         if (searchReviews.data.results.length !== 0) {\n          setFilmReviews(searchReviews.data.results)\n          setIsLoadings(false)\n          return \n         }\n        setIsLoadings(false)\n        setFilmReviews([])\n        throw new Error(\"We don't have any reviews for this movie\");\n      } catch (error) {\n        setIsLoadings(false)\n        setError(error)\n        setFilmReviews([])\n        console.log(error);\n      }\n    }\n\n    setIsLoadings(true)\n    getFilm()      \n  })\n  return (\n    <section>\n      {isLoading && <Loader />}\n      {error && <h2>{error.message}</h2>}\n      {filmReviews.length !== 0 && <ul>\n              {filmReviews.map((review) => (\n                <li key={review.id}>\n                  <Avtor>Autor: {review.author}</Avtor>\n                  <p>{review.content}</p>\n                </li>\n              ))}\n          </ul>}\n\n    </section>\n  );\n};\n\nexport default Reviews;"],"names":["getAxiosList","axios","getAxiosID","movieId","url","getSearchFilms","searchFilms","parameters","key","nameFilm","getAxiosActors","getAxiosReviews","Avtor","styled","useParams","useState","filmReviews","setFilmReviews","isLoading","setIsLoadings","error","setError","useMount","searchReviews","data","results","length","Error","console","log","getFilm","Loader","message","map","review","author","content","id"],"sourceRoot":""}